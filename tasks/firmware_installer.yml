---
- name: Clearing previous log entries
  file:
    path: "/var/cpq/Component.log"
    state: absent
  ignore_errors: true

- name: Installing firmware "{{ item }}"
  yum: 
    name: "{{ item | splitext | first }}"
    state: present
  when: not use_modern_installer

- name: Installing firmware "{{ item.firmware }}"
  block:
    - name: Install firmware "{{ item.firmware }}" from a repository
      dnf:
        name: "{{ item.firmware }}"
        enablerepo: "{{ item.hp_repository }}"
        update_cache: yes
        state: present
      when: use_modern_installer | bool
            and ansible_distribution_major_version >= "8"
            and not item.local_installation

    - name: Install firmware from local rpm file
      ansible.builtin.yum:
        name: "/tmp/{{ item.local_file }}"
        state: present
        disable_gpg_check: true
      when: use_modern_installer | bool
            and ansible_distribution_major_version >= "8"
            and item.local_installation | bool

- name: Define common variable
  set_fact: fw_rpm_name="{{ item }}"
  when: not use_modern_installer

- name: Define common variable
  set_fact: fw_rpm_name="{{ item.firmware }}"
  when: use_modern_installer | bool
        and ansible_distribution_major_version >= "8"

- name: extract path for hpsetup command
  shell: "rpm -ql {{ fw_rpm_name }}|grep /hpsetup"
  args:
    warn: False
  register: FirmwarePackage
  changed_when: False
  check_mode: false

- name:  set_fact for firmware_installer path from "{{ fw_rpm_name }}" RPM
  set_fact: firmware_installer="{{ FirmwarePackage.stdout | splitext | first }}"

- name: Installing firmware from "{{ fw_rpm_name }}"  in silent mode
  command: "{{ firmware_installer }}  -s "
  ignore_errors: true

- name: Testing if log file exists
  stat: path='/var/cpq/Component.log'
  register: optional_file

- name: Gather optional installer log for "{{ fw_rpm_name }}"
  command: "/bin/cat {{ optional_file.stat.path }}"
  register: details
  when: optional_file.stat.exists

- name: Print optional installer log for "{{ fw_rpm_name }}"
  debug:
    msg: "{{ details.stdout_lines }}"
  when: details.rc == 0

- name: Firmware RPM cleanup {{ item }}
  package: name={{ item | splitext | first }} state=absent
  when: not use_modern_installer

- name: Firmware RPM cleanup {{ item.firmware }}
  package:
    name: "{{ item.firmware }}"
    state: absent
  when: use_modern_installer | bool and
        ansible_distribution_major_version >= "8"
