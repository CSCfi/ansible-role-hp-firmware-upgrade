language: generic

os: linux
dist: jammy

services:
  - docker

matrix:
  fast_finish: true

env:
  - IMAGE_BUILD_PLATFORM=stable-centos8
  - IMAGE_BUILD_PLATFORM=devel-alma9
  - IMAGE_BUILD_PLATFORM=stable-alma9

install:
  - npm install validate-dockerfile

before_script:
  # TESTDIR = Where the stable-centos/Dockerfile is located
  - export TESTDIR=tests
  # ROLETOTEST = The name of this repo
  - export ROLETOTEST=$(basename $(pwd))
  - export COMMIT=${TRAVIS_COMMIT::8}
  # The tag we assign the docker image we build with the Dockerfile
  - export REPO=csc/ansible
  # Validate the Dockerfile
  - npx docklint ${TESTDIR}/${IMAGE_BUILD_PLATFORM}/Dockerfile
  # Build the image with cgroups v2 support
  - docker build -t ${REPO}:${IMAGE_BUILD_PLATFORM} ${TESTDIR}/${IMAGE_BUILD_PLATFORM}/
  # Launch the container with systemd and cgroups v2 enabled
  - docker run --privileged --cgroupns=host -d -ti -e "container=docker" -v `pwd`:/$ROLETOTEST -v /sys/fs/cgroup:/sys/fs/cgroup:rw ${REPO}:${IMAGE_BUILD_PLATFORM} /usr/sbin/init

  - DOCKER_CONTAINER_ID=$(docker ps | grep ${IMAGE_BUILD_PLATFORM} | awk '{print $1}')
  - docker logs $DOCKER_CONTAINER_ID
  # Testing of this ansible-role:
script:
  - docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c "/$ROLETOTEST/tests/test-in-docker-image.sh"

after_script:
  # Print some logs and other useful information for debugging travis:
  - >
    docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'echo -ne "------\nEND ANSIBLE TESTS\n------\nSystemD Units:\n------\n";
       systemctl --no-pager --all --full status ;
       echo -ne "------\nJournalD Logs:\n------\n" ;
       sudo journalctl --catalog --all --full --no-pager'
  - docker exec -ti $DOCKER_CONTAINER_ID /bin/sh -c 'tree /ansible*'
  - docker ps -a
  - docker stop $DOCKER_CONTAINER_ID
  - docker rm -v $DOCKER_CONTAINER_ID

notifications:
  email: false
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
